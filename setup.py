#!/usr/bin/env python

import os
import sys
import time

from numpy.distutils.core import setup

DISTNAME =     'bionet.utils'
DESCRIPTION =  'Bionet utilities'
AUTHOR =       'Lev Givon'
AUTHOR_EMAIL = 'lev@columbia.edu'
URL =          'http://bionet.ee.columbia.edu/code'
DOWNLOAD_URL = URL
LICENSE =      'BSD'
VERSION =      '0.011'
IS_RELEASED =  False

def get_version(version, is_released=True):

    full_version = version
    if not is_released and os.path.exists('.hg'):

        # Do not read any config file when running mercurial:
        os.environ['HGRCPATH'] = '' 
        cmd = '%s /usr/bin/hg id -it' % sys.executable

        try:
            l = os.popen(cmd).read().split()
        except OSError, e:
            print "warning: could not determine version: %s" % e

        # Toss non-numbered tags:
        while len(l) > 1 and l[-1][0].isalpha(): 
            l.pop()
        if l:

            # Get the latest tag or revision number:
            version = l[-1] 

            # Append the current time if the source code has been
            # modified but not checked in:
            if version.endswith('+'):
                version += time.strftime('%Y%m%d')

        # Append the global Mercurial revision:
        full_version += '.dev.'+version

    return full_version

def write_version_py(version,filename='bionet/utils/version.py'):
    f = file(filename,"w")
    f.write("# THIS FILE IS GENERATED BY THE TDC SETUP.PY FILE\n")
    f.write("__version__ = '"+version+"'\n")
    f.close()

def configuration(parent_package='', top_path=None,
                  package_name=DISTNAME):
    if os.path.exists('MANIFEST'): os.remove('MANIFEST')
    from numpy.distutils.misc_util import Configuration
    config = Configuration(package_name, parent_package, top_path,
                           version = VERSION,
                           author = AUTHOR,
                           author_email = AUTHOR_EMAIL,
                           description = DESCRIPTION,
                           license = LICENSE,
                           url = URL,
                           download_url = DOWNLOAD_URL)
    return config
                           
if __name__=="__main__":
    write_version_py(get_version(VERSION,IS_RELEASED))
    
    setup(configuration = configuration,
          packages = ['bionet','bionet.utils'],
          package_dir = {'bionet.utils': 'bionet/utils'},
          install_requires = ['numpy','tables'],
          classifiers = [
        'Development Status :: 4 - Beta',
        'Intended Audience :: Developers',
        'Intended Audience :: Science/Research',
        'License :: OSI Approved :: BSD License',
	'Operating System :: OS Independent',
	'Programming Language :: Python',
        'Topic :: Scientific/Engineering',
        'Topic :: Software Development'])
